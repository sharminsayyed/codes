
Q.1) Consider the following database:   
  
Policy (pno, pname, premium_amt, policy_type)  
 Customer (cno, cname. city, agent_name)  
  
The relationship is as follows: Policy-Customer: many-to-one. The “policy_type” can 
havevalues as “Yearly”, “Half-yearly” or “Monthly”  
  
A) Create above database in PostgreSQL and insert sufficient records.                          
  and Execute the following queries in PostGreSQL   
        
i) List the details of all customers who live in city.  
ii) Display the average premium amount.  
iii) Increases the premium amount for Monthly policies by 10%.  
iv) Display the policy type wise count of policies.  
  
B) Create a stored function named as names as “max_premium” which will find max premium  
 amount.     

ANSWER----------------------------------------------------------------------------------------------------------------------------------------------------->

 create table customer (cno int primary key ,cname varchar(20),city varchar(20),agent varchar(20));

 create table policy (pno int primary key , pname varchar(20), pamt money ,ptype varchar check(ptype in ('yearly','monthly','half-yearly')),cno int references customer);


 cno |  cname  |  city   | agent
-----+---------+---------+--------
   1 | sharmin | pune    | harsh
   2 | ahadd   | kolkata | sameer
   3 | emaan   | pune    | pranav


pno |      pname      |    pamt    |    ptype    | cno
-----+-----------------+------------+-------------+-----
 101 | lic policy      | $34,000.00 | monthly     |   1
 102 | behen policy    | $23,000.00 | yearly      |   1
 103 | shikshan policy | $89,000.00 | monthly     |   2
 104 | oldage policy   | $90,000.00 | half-yearly |   3
 105 | child policy    | $67,000.00 | half-yearly |   2



i) List the details of all customers who live in city.  
--> select * from customer where city='pune';

ii) Display the average premium amount.  
--> select avg(pamt :: numeric) from policy;

iii) Increases the premium amount for Monthly policies by 10%.  
--> update policy set pamt = pamt + (pamt * 0.10) where ptype='monthly';

iv) Display the policy type wise count of policies.  
--> select ptype ,count(ptype) from policy group by ptype;
    ptype    | count
-------------+-------
 half-yearly |     2
 yearly        |     1
 monthly     |     2



B) Create a stored function named as names as “max_premium” which will find max premium  
 amount.
--->
create or replace function max_premium() returns money as $$
declare res money;
begin
select into res max(pamt) from policy;
return res;
end;
$$ language 'plpgsql';


select max_premium();
 max_premium
-------------
  $90,000.00